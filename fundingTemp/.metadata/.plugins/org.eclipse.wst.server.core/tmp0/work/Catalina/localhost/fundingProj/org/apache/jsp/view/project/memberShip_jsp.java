/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.64
 * Generated at: 2022-09-02 03:23:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view.project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberShip_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1660185375234L));
    _jspx_dependants.put("jar:file:/D:/program/fundingTemp/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/fundingProj/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\n");
      out.write("#emailChk {\n");
      out.write("	display: none;\n");
      out.write("}\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../font/jquery-3.6.0.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../font/jquery-ui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	 var resCode = \"\"; \r\n");
      out.write("	 var resText = \"인증완료\";\r\n");
      out.write("	 var res = 0;\r\n");
      out.write("	 \r\n");
      out.write("	$(function() {\r\n");
      out.write("\r\n");
      out.write("		var email_Area = document.getElementById(\"email\")\r\n");
      out.write("		var emailCerti_Area = document.getElementById(\"emailCerti\")\r\n");
      out.write("		var emailCertiChk_Area = document.getElementById(\"emailCertiChk\")\r\n");
      out.write("		var emailChk = $(\"#emailCertiChk\").val()\r\n");
      out.write("		var pw_Area = document.getElementById(\"pw\")\r\n");
      out.write("		var pw2_Area = document.getElementById(\"pw2\")\r\n");
      out.write("		var nickname_Area = document.getElementById(\"nickname\")\r\n");
      out.write("		var nickname_Chk = document.getElementById(\"chkNickname\").value\r\n");
      out.write("		var pw_Chk = /^[a-zA-z0-9]{8,16}$/\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btn\").click(function() {\r\n");
      out.write("		\r\n");
      out.write("			email_Area.value = \"\";\r\n");
      out.write("			pw_Area.value = \"\";\r\n");
      out.write("			pw2_Area.value = \"\";\r\n");
      out.write("			nickname_Area.value = \"\";\r\n");
      out.write("\r\n");
      out.write("			alert(\"초기화완료\")\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		$(\"#chkbutton\").click(function() {\r\n");
      out.write("			console.log($(\"#nickname\").val())\r\n");
      out.write("			var nickname = $(\"#nickname\").val();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("NickNameChk\", //요청 url설정\r\n");
      out.write("				type : \"post\", // GET/POST설정 \r\n");
      out.write("				data : {\r\n");
      out.write("					nickname : nickname\r\n");
      out.write("				}, // 요청 매개변수 설정\r\n");
      out.write("				// 			dataType :'json',\r\n");
      out.write("				success : function(result) {\r\n");
      out.write("					//alert(result)\r\n");
      out.write("					if (result == '0') {\r\n");
      out.write("						$(\"#chkNickname\").html(\"중복된 닉네임 입니다.\")\r\n");
      out.write("						$(\"#chkNickname\").css('color', '#f00')	\r\n");
      out.write("						// 					nickname_Chk.value(\"중복된 닉네임 입니다.\")\r\n");
      out.write("						$(\"input[type=submit]\").attr(\"disabled\", true);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("					} else {\r\n");
      out.write("						$(\"#chkNickname\").html(\"사용 가능한 닉네임 입니다.\")\r\n");
      out.write(" 						$(\"#chkNickname\").css('color', '#00f')	\r\n");
      out.write("						// 					nickname_Chk.value(\"사용 가능한 닉네임 입니다.\")\r\n");
      out.write("						$(\"input[type=submit]\").attr(\"disabled\", false);\r\n");
      out.write("\r\n");
      out.write("					}\r\n");
      out.write("\r\n");
      out.write("				},\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert(\"서버요청 실패\");\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("		$(\"#certiBtn\").on(\"click\", function(e) {\r\n");
      out.write("			console.log($(\"#email\").val())\r\n");
      out.write("			var email = $(\"#email\").val();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"");
      if (_jspx_meth_c_005furl_005f1(_jspx_page_context))
        return;
      out.write("EmailChk\", //요청 url설정\r\n");
      out.write("				type : \"post\", // GET/POST설정 \r\n");
      out.write("				data : {\r\n");
      out.write("					email : email\r\n");
      out.write("				}, // 요청 매개변수 설정\r\n");
      out.write("				// 			dataType :'json',\r\n");
      out.write("				success : function(result) {\r\n");
      out.write("					//alert(result)\r\n");
      out.write("					if (result == '0') {\r\n");
      out.write("						resCode = \"\"\r\n");
      out.write("						alert(\"중복된 이메일입니다.\")\r\n");
      out.write("					} else {\r\n");
      out.write("						console.log(result);\r\n");
      out.write("						resCode = result\r\n");
      out.write("						alert(\"인증코드가 발송되었습니다 확인해 주세요\")\r\n");
      out.write("						$(\"#emailChk\").css('display', 'block')\r\n");
      out.write("						\r\n");
      out.write("						\r\n");
      out.write("					}\r\n");
      out.write("\r\n");
      out.write("				},\r\n");
      out.write("				error : function() {\r\n");
      out.write("					alert(\"서버요청 실패\");\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("\r\n");
      out.write("		})\r\n");
      out.write(" 		$(\"#certiChk\").on(\"click\",function(){\r\n");
      out.write(" 			\r\n");
      out.write("\r\n");
      out.write(" 			console.log(emailCerti_Area.value)\r\n");
      out.write(" 			console.log(resCode)\r\n");
      out.write(" 			if(emailCerti_Area.value==resCode){\r\n");
      out.write(" 				resText = \"인증완료\";\r\n");
      out.write(" 				$(\"#emailCertiChk\").css('color', '#00f')		\r\n");
      out.write(" 			console.log(emailCertiChk_Area.value)\r\n");
      out.write(" 				res = 1;\r\n");
      out.write(" 			\r\n");
      out.write(" 			}else{\r\n");
      out.write(" 				resText =\"인증실패\";\r\n");
      out.write(" 				$(\"#emailCertiChk\").css('color', '#f00')	\r\n");
      out.write(" 				res = 0;\r\n");
      out.write(" 				\r\n");
      out.write(" 		\r\n");
      out.write(" 			}\r\n");
      out.write(" 			\r\n");
      out.write(" 				$(\"#emailCertiChk\").html(resText)\r\n");
      out.write(" 				console.log(res)\r\n");
      out.write("	 			\r\n");
      out.write(" 		})\r\n");
      out.write(" 		\r\n");
      out.write("		$(\"#back\").on(\"click\", function() {\r\n");
      out.write("			location.href = \"");
      if (_jspx_meth_c_005furl_005f2(_jspx_page_context))
        return;
      out.write("MainList\"\r\n");
      out.write("\r\n");
      out.write("		})\r\n");
      out.write("		$(\"input[type=submit]\").click(function() {\r\n");
      out.write("			\r\n");
      out.write("			if (email_Area.value == \"\") {\r\n");
      out.write("				alert(\"이메일을 입력하세요.\")\r\n");
      out.write("				return false\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			if (pw_Area.value == \"\") {\r\n");
      out.write("\r\n");
      out.write("				alert(\"비밀번호를 입력하세요.\")\r\n");
      out.write("				return false\r\n");
      out.write("			}\r\n");
      out.write("			if (pw2_Area.value == \"\") {\r\n");
      out.write("\r\n");
      out.write("				alert(\"비밀번호 확인을 입력하세요.\")\r\n");
      out.write("				return false\r\n");
      out.write("			}\r\n");
      out.write("			if (pw_Chk.test(pw_Area.value) == false) {\r\n");
      out.write("				alert(\"비밀번호 형식이 맞지않습니다.\")\r\n");
      out.write("				return false\r\n");
      out.write("\r\n");
      out.write("			}\r\n");
      out.write("			if (pw_Area.value != pw2_Area.value) {\r\n");
      out.write("				alert(\"비밀번호가 일치하지않습니다.\")\r\n");
      out.write("				return false\r\n");
      out.write("			}\r\n");
      out.write("			if (nickname_Area.value == \"\") {\r\n");
      out.write("\r\n");
      out.write("				alert(\"닉네임을 입력하세요.\")\r\n");
      out.write("				return false\r\n");
      out.write("			}\r\n");
      out.write("		\r\n");
      out.write("			\r\n");
      out.write("			if (res != 1){\r\n");
      out.write("				alert(\"인증번호를 확인하세요.\")\r\n");
      out.write(" 				return false\r\n");
      out.write(" 			}\r\n");
      out.write(" 			\r\n");
      out.write("\r\n");
      out.write("			return true\r\n");
      out.write("		})\r\n");
      out.write("\r\n");
      out.write("	})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<form action=\"MemberShipReg\" class=\"memberArea\">\r\n");
      out.write("<h1>회원가입</h1>\r\n");
      out.write("\r\n");
      out.write("	<fieldset>\r\n");
      out.write("		<legend>이메일</legend>\r\n");
      out.write("		<label><input type=\"text\" id=\"email\" name=\"email\" /></label> \r\n");
      out.write("		<div  class = \"buttonArea\"> <input	type=\"button\" id=\"certiBtn\" value=\"인증번호 받기\" /> </div>\r\n");
      out.write("	</fieldset>\r\n");
      out.write("\r\n");
      out.write("	<fieldset id=\"emailChk\">\r\n");
      out.write("		<legend>이메일 인증 번호 입력</legend>\r\n");
      out.write("		<input type=\"text\" id=\"emailCerti\" name=\"emailCerti\" />\r\n");
      out.write("		<span id=\"emailCertiChk\" >인증번호를 입력하세요.</span>\r\n");
      out.write("	<div  class = \"buttonArea\">	<input type=\"button\" id=\"certiChk\" value=\"인증번호 확인\" /> </div>\r\n");
      out.write("	</fieldset>\r\n");
      out.write("\r\n");
      out.write("	<fieldset>\r\n");
      out.write("		<legend>비밀번호</legend>\r\n");
      out.write("		<input type=\"password\" id=\"pw\" name=\"pw\" />\r\n");
      out.write("	</fieldset>\r\n");
      out.write("\r\n");
      out.write("	<fieldset>\r\n");
      out.write("		<legend>비밀번호 확인</legend>\r\n");
      out.write("		<input type=\"password\" id=\"pw2\" name=\"pw2\" />\r\n");
      out.write("	</fieldset>\r\n");
      out.write("\r\n");
      out.write("	<fieldset>\r\n");
      out.write("		<legend>닉네임</legend>\r\n");
      out.write("		<input type=\"text\" id=\"nickname\" name=\"nickname\" /> \r\n");
      out.write("		<span id=\"chkNickname\" ></span>\r\n");
      out.write("		<div  class = \"buttonArea\">	<input type=\"button\" id=\"chkbutton\" value=\"중복체크\" /></div>\r\n");
      out.write("	</fieldset>\r\n");
      out.write("\r\n");
      out.write("	<div  class = \"buttonArea\">\r\n");
      out.write("		 <input type=\"button\" id=\"btn\" value=\"초기화\"  />\r\n");
      out.write("		 <input type=\"submit\" id=\"btn2\" value=\"가입하기\" /> \r\n");
      out.write("		<input type=\"button\" id=\"back\" value=\"뒤로가기\" />\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</form>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /view/project/memberShip.jsp(44,11) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/ajax/");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent(null);
      // /view/project/memberShip.jsp(79,11) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue("/ajax/");
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f2(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f2 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f2_reused = false;
    try {
      _jspx_th_c_005furl_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f2.setParent(null);
      // /view/project/memberShip.jsp(131,20) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f2.setValue("/brandus/");
      int _jspx_eval_c_005furl_005f2 = _jspx_th_c_005furl_005f2.doStartTag();
      if (_jspx_th_c_005furl_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f2);
      _jspx_th_c_005furl_005f2_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f2, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f2_reused);
    }
    return false;
  }
}
